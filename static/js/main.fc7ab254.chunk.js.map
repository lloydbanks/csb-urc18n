{"version":3,"sources":["Formula/index.js","App.js","index.js"],"names":["items","label","id","itemsLabels","map","mathActions","mathItems","Formula","useState","inputValue","setInputValue","list","setList","hasError","showList","setShowList","valueRef","useRef","useEffect","values","split","lastValue","length","lastChar","includes","Number","isNaN","filteredList","filter","item","toLowerCase","isEqual","some","action","filtered","TextField","placeholder","value","onChange","ref","className","onClick","inputValues","join","current","focus","handleClick","Text","view","size","App","Theme","preset","presetGpnDefault","rootElement","document","getElementById","createRoot","render"],"mappings":"yNAIMA,EAAQ,CACZ,CACEC,MAAO,IACPC,GAAI,GAEN,CACED,MAAO,IACPC,GAAI,GAEN,CACED,MAAO,oDACPC,GAAI,GAEN,CACED,MAAO,0DACPC,GAAI,GAEN,CACED,MAAO,gEACPC,GAAI,GAEN,CACED,MAAO,sEACPC,GAAI,IAGFC,EAAcH,EAAMI,KAAI,qBAAGH,SAE3BI,EAAc,CAAC,IAAK,IAAK,IAAK,KAC9BC,EAAY,CAChB,CAAEL,MAAO,IAAKC,GAAI,GAClB,CAAED,MAAO,IAAKC,GAAI,GAClB,CAAED,MAAO,IAAKC,GAAI,GAClB,CAAED,MAAO,IAAKC,GAAI,IAyFLK,EAtFC,WACd,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAASR,GAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KACA,GADA,KACgCL,oBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,iBAAO,MAMxBC,qBAAU,WAAO,IAAD,EACRC,EAAM,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAYW,MAAM,YAArB,QAA6B,GACnCC,EAAYF,EAAOA,EAAOG,OAAS,GACnCC,EAAWJ,EAAOA,EAAOG,OAAS,GACxC,IACED,GACChB,EAAYmB,SAASH,IACpBI,OAAOC,OAAOL,IAAeE,EAO1B,GAAIA,GAAYE,OAAOC,OAAOH,GAAW,CAC9C,IAAMI,EAAeJ,EACjBvB,EAAM4B,QAAO,SAACC,GAAD,OACXA,EAAK5B,MAAM6B,cAAcN,SAASD,EAASO,kBAE7C9B,EACE+B,EAAU5B,EAAY6B,MAC1B,SAACH,GAAD,OAAUA,IAAI,UAAQR,EAAR,YAAqBE,MAErCR,GAAagB,GACbnB,EAAQe,QACCtB,EAAY2B,MAAK,SAACC,GAAD,OAAYA,IAAWZ,MACjDT,EAAQZ,GACRe,GAAY,IAEZA,GAAY,OArBZ,CACA,IAAMmB,EAAWX,EACbjB,EAAUsB,QAAO,SAACC,GAAD,OAAUA,EAAK5B,QAAUsB,KAC1CjB,EACJM,EAAQsB,GACRnB,GAAY,MAkBb,CAACN,IAWJ,OACE,qCACE,cAAC0B,EAAA,EAAD,CACEC,YAAY,wFACZC,MAAO5B,EACP6B,SAnDe,SAAC,GAAe,IAAbD,EAAY,EAAZA,MACtB3B,EAAc2B,IAmDVE,IAAKvB,EACLwB,UAAU,cAEX1B,GACC,qBAAK0B,UAAU,OAAf,SACG7B,EAAKP,KAAI,SAACyB,GACT,OACE,qBACEW,UAAU,OAEVC,QAAS,kBAzBH,SAAC,GAAmB,IAAD,EAAhBxC,EAAgB,EAAhBA,MACfyC,GAD+B,EAATxC,GACRO,EAAWW,MAAM,MACrCsB,EAAYA,EAAYpB,OAAS,GAAjC,UAAyCrB,EAAzC,KACAS,EAAcgC,EAAYC,KAAK,MAC/B/B,EAAQZ,GACRe,GAAY,GACJ,OAARC,QAAQ,IAARA,GAAA,UAAAA,EAAU4B,eAAV,SAAmBC,QAmBQC,CAAYjB,IAH7B,SAKGA,EAAK5B,OAHD4B,EAAK5B,YASnBY,GACC,cAACkC,EAAA,EAAD,CAAMC,KAAK,QAAQC,KAAK,IAAxB,mHCxGOC,G,MARH,WACV,OACE,cAACC,EAAA,EAAD,CAAOC,OAAQC,IAAf,SACE,cAAC,EAAD,QCJAC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,S","file":"static/js/main.fc7ab254.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Text } from \"@consta/uikit/Text\";\r\nimport { TextField } from \"@consta/uikit/TextField\";\r\n\r\nconst items = [\r\n  {\r\n    label: \"X\",\r\n    id: 1\r\n  },\r\n  {\r\n    label: \"Y\",\r\n    id: 2\r\n  },\r\n  {\r\n    label: \"Год ввода\",\r\n    id: 3\r\n  },\r\n  {\r\n    label: \"Дата ввода\",\r\n    id: 4\r\n  },\r\n  {\r\n    label: \"Дебит нефти\",\r\n    id: 5\r\n  },\r\n  {\r\n    label: \"Имя скважины\",\r\n    id: 6\r\n  }\r\n];\r\nconst itemsLabels = items.map(({ label }) => label);\r\n\r\nconst mathActions = [\"+\", \"-\", \"*\", \"/\"];\r\nconst mathItems = [\r\n  { label: \"+\", id: 1 },\r\n  { label: \"-\", id: 2 },\r\n  { label: \"*\", id: 3 },\r\n  { label: \"/\", id: 4 }\r\n];\r\n\r\nconst Formula = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [list, setList] = useState(items);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [showList, setShowList] = useState(false);\r\n  const valueRef = useRef(null);\r\n\r\n  const handleChange = ({ value }) => {\r\n    setInputValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const values = inputValue?.split(\" \") ?? [];\r\n    const lastValue = values[values.length - 2];\r\n    const lastChar = values[values.length - 1];\r\n    if (\r\n      lastValue &&\r\n      !mathActions.includes(lastValue) &&\r\n      (!Number.isNaN(+lastValue) || !lastChar)\r\n    ) {\r\n      const filtered = lastChar\r\n        ? mathItems.filter((item) => item.label === lastChar)\r\n        : mathItems;\r\n      setList(filtered);\r\n      setShowList(true);\r\n    } else if (lastChar && Number.isNaN(+lastChar)) {\r\n      const filteredList = lastChar\r\n        ? items.filter((item) =>\r\n            item.label.toLowerCase().includes(lastChar.toLowerCase())\r\n          )\r\n        : items;\r\n      const isEqual = itemsLabels.some(\r\n        (item) => item === `${lastValue} ${lastChar}`\r\n      );\r\n      setShowList(!isEqual);\r\n      setList(filteredList);\r\n    } else if (mathActions.some((action) => action === lastValue)) {\r\n      setList(items);\r\n      setShowList(true);\r\n    } else {\r\n      setShowList(false);\r\n    }\r\n  }, [inputValue]);\r\n\r\n  const handleClick = ({ label, id }) => {\r\n    const inputValues = inputValue.split(\" \");\r\n    inputValues[inputValues.length - 1] = `${label} `;\r\n    setInputValue(inputValues.join(\" \"));\r\n    setList(items);\r\n    setShowList(false);\r\n    valueRef?.current?.focus();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        placeholder=\"Введите формулу\"\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        ref={valueRef}\r\n        className=\"textField\"\r\n      />\r\n      {showList && (\r\n        <div className=\"list\">\r\n          {list.map((item) => {\r\n            return (\r\n              <div\r\n                className=\"item\"\r\n                key={item.label}\r\n                onClick={() => handleClick(item)}\r\n              >\r\n                {item.label}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      {hasError && (\r\n        <Text view=\"alert\" size=\"l\">\r\n          Формула невалидна\r\n        </Text>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Formula;\r\n","import React from \"react\";\nimport { Theme, presetGpnDefault } from \"@consta/uikit/Theme\";\nimport Formula from \"./Formula\";\n\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <Theme preset={presetGpnDefault}>\n      <Formula />\n    </Theme>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}